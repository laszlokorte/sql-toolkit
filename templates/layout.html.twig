<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<title>{%- block title -%}Conference Manager{%- endblock -%}</title>
	<link rel="stylesheet" href="{{ path('root') }}style.css">
	<link rel="icon" type="image/png" href="{{ path('root') }}favicon.png" />
</head>
<body>
	<svg width="0" height="0">
		<defs>
			<symbol id="icon-delete">
				<path fill="currentColor" d="M12,0C5.372,0 0,5.373 0,12C0,18.627 5.371,24 12,24C18.629,24 24,18.627 24,12C24,5.373 18.629,0 12,0ZM17.561,15.439C18.147,16.026 18.147,16.974 17.561,17.56C17.268,17.853 16.884,18 16.5,18C16.116,18 15.732,17.853 15.439,17.561L12,14.121L8.561,17.561C8.268,17.853 7.884,18 7.5,18C7.116,18 6.732,17.853 6.439,17.561C5.853,16.974 5.853,16.026 6.439,15.44L9.879,12L6.439,8.561C5.853,7.974 5.853,7.026 6.439,6.44C7.026,5.853 7.974,5.853 8.56,6.44L12,9.879L15.439,6.439C16.026,5.853 16.974,5.853 17.56,6.439C18.147,7.026 18.147,7.974 17.56,8.56L14.121,12L17.561,15.439Z"/>
			</symbol>
			<symbol id="icon-edit">
				<path fill="currentColor" d="M9.305,8.478L2.65,8.478L2.65,21.324L15.371,21.324L15.371,15.22L18.021,12.544L18.021,22.127C18.021,22.974 17.613,23.912 16.696,24L1.855,24C0.977,24 0,23.013 0,22.127L0,7.14C0,6.253 0.977,5.802 1.855,5.802L11.955,5.802L9.305,8.478ZM12.321,15.972L8.481,15.972L8.481,11.812L12.321,15.972ZM9.105,10.949L13.227,15.113L21.849,6.408L17.726,2.244L9.105,10.949ZM23.367,1.888L22.046,0.553C21.316,-0.184 20.132,-0.184 19.402,0.553L18.475,1.488L22.597,5.651L23.524,4.715C24.255,3.979 24.098,2.625 23.367,1.888Z"/>
			</symbol>
			<symbol id="icon-copy">
				<path fill="currentColor" d="M20,0C13.38,0 8,5.38 8,12C8,18.62 13.38,24 20,24C26.62,24 32,18.62 32,12C32,5.38 26.62,0 20,0ZM2.667,12C2.667,8.28 4.86,5.073 8.013,3.573L8.013,0.7C3.353,2.34 0,6.78 0,12C0,17.22 3.353,21.66 8.013,23.3L8.013,20.427C4.86,18.927 2.667,15.72 2.667,12ZM20,21.333C14.853,21.333 10.667,17.147 10.667,12C10.667,6.853 14.853,2.667 20,2.667C25.147,2.667 29.333,6.853 29.333,12C29.333,17.147 25.147,21.333 20,21.333ZM21.333,10.667L25.333,10.667L25.333,13.333L21.333,13.333L21.333,17.333L18.667,17.333L18.667,13.333L14.667,13.333L14.667,10.667L18.667,10.667L18.667,6.667L21.333,6.667L21.333,10.667Z"/>
			</symbol>
			<symbol id="icon-new">
				<path fill="currentColor" d="M3.515,20.485C8.202,25.172 15.799,25.171 20.485,20.485C25.171,15.799 25.172,8.202 20.485,3.515C15.798,-1.172 8.201,-1.171 3.515,3.515C-1.171,8.201 -1.172,15.798 3.515,20.485ZM10.5,5.636C10.5,4.807 11.171,4.136 12,4.136C12.414,4.136 12.789,4.304 13.061,4.575C13.332,4.847 13.5,5.222 13.5,5.636L13.5,10.5L18.364,10.5C18.778,10.5 19.153,10.668 19.425,10.939C19.696,11.211 19.864,11.586 19.864,12C19.864,12.829 19.193,13.5 18.364,13.5L13.5,13.5L13.5,18.364C13.5,19.193 12.829,19.864 12,19.864C11.171,19.864 10.5,19.193 10.5,18.364L10.5,13.5L5.636,13.5C4.807,13.5 4.136,12.829 4.136,12C4.136,11.171 4.807,10.5 5.636,10.5L10.5,10.5L10.5,5.636Z"/>
			</symbol>
			<symbol id="icon-download">
				<path fill="currentColor" d="M20.727,24L3.273,24C2.618,24 2.182,23.564 2.182,22.909C2.182,21.709 3.164,20.727 4.364,20.727L19.636,20.727C20.836,20.727 21.818,21.709 21.818,22.909C21.818,23.564 21.382,24 20.727,24ZM18.545,9.818C19.418,9.818 19.964,10.691 19.418,11.236L12.873,18.109C12.436,18.655 11.564,18.655 11.127,18.109L4.582,11.345C4.036,10.691 4.582,9.818 5.455,9.818L9.818,9.818C9.818,9.812 9.6,4.689 9.818,2.182C9.927,0.982 10.8,0 12,0C13.2,0 14.073,0.982 14.182,2.182C14.4,4.794 14.183,9.796 14.182,9.818L18.545,9.818Z"/>
			</symbol>
		</defs>
	</svg>
	{% block body %}
	    
	{% endblock %}
	<script>
		document.body.addEventListener('change', function(evt) {
			if(evt.target.tagName === 'INPUT' && evt.target.type === 'checkbox' && evt.target.hasAttribute('data-select')) {
				var sel = evt.target.getAttribute('data-select');
				var row = evt.target.parentNode.parentNode.parentNode;
				var table = row.parentNode.parentNode;
				if(sel === 'all') {
					var isChecked = evt.target.checked;

					Array.prototype.forEach.call(
						table.querySelectorAll('tbody [data-select]'),
						function(c) {
							c.checked = isChecked
							var cRow = c.parentNode.parentNode.parentNode
							cRow.classList.toggle('state-selected', isChecked)
						}
					)
				} else {
					row.classList.toggle('state-selected', isChecked)

					var allChecked = Array.prototype.reduce.call(
						table.querySelectorAll('tbody input[data-select]'),
						function(acc, c) {
							return acc === undefined ? c.checked : (acc === c.checked ? acc : null)
						},
						undefined
					)

					var allCheck = table.querySelector('[data-select=all]')

					allCheck.checked = allChecked === true
					allCheck.indeterminate = allChecked === null
				}
			}
		}, false)
	</script>
</body>
</html>